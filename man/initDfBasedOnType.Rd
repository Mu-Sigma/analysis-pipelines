% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core-functions.R
\name{initDfBasedOnType}
\alias{initDfBasedOnType}
\title{initializes the \code{AnalysisPipeline} object with the input based on the provided type}
\usage{
initDfBasedOnType(input, filePath)
}
\arguments{
\item{input}{Input dataframe}

\item{filePath}{File path where the .csv file is stored}
}
\value{
\code{AnalysisPipeline} object initialized with input
}
\description{
initializes the \code{AnalysisPipeline} object with the input based on the provided type
}
\details{
Transforms provided inputs into R data frame regardless of the input provided, be it Spark DataFrames
     or Python data frames
}
\seealso{
Other Package core functions: \code{\link{BaseAnalysisPipeline-class}},
  \code{\link{MetaAnalysisPipeline-class}},
  \code{\link{assessEngineSetUp}},
  \code{\link{checkSchemaMatch}},
  \code{\link{createPipelineInstance}},
  \code{\link{exportAsMetaPipeline}},
  \code{\link{generateOutput}},
  \code{\link{genericPipelineException}},
  \code{\link{getInput}}, \code{\link{getLoggerDetails}},
  \code{\link{getOutputById}},
  \code{\link{getPipelinePrototype}},
  \code{\link{getPipeline}}, \code{\link{getRegistry}},
  \code{\link{initialize,BaseAnalysisPipeline-method}},
  \code{\link{loadMetaPipeline}},
  \code{\link{loadPipeline}},
  \code{\link{loadPredefinedFunctionRegistry}},
  \code{\link{loadRegistry}}, \code{\link{prepExecution}},
  \code{\link{registerFunction}},
  \code{\link{savePipeline}}, \code{\link{saveRegistry}},
  \code{\link{setInput}}, \code{\link{setLoggerDetails}},
  \code{\link{updateObject}},
  \code{\link{visualizePipeline}}
}
\concept{Package core functions}
\keyword{internal}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core-functions-meta-pipelines.R
\docType{methods}
\name{initializeMetaAnalysisPipeline}
\alias{initializeMetaAnalysisPipeline}
\title{This is the constructor for the \link{MetaAnalysisPipeline} class}
\usage{
\S4method{initialize}{MetaAnalysisPipeline}(.Object, type = "batch")
}
\arguments{
\item{.Object}{The \code{MetaAnalysisPipeline} object}

\item{type}{A string defining whether it is a batch or streaming pipeline. Acceptable values are 'batch' & 'streaming'}
}
\value{
an object of class \code{MetaAnalysisPipeline}"
}
\description{
This is the constructor for the \link{MetaAnalysisPipeline} class
}
\details{
This method is a constructor for the \code{MetaAnalysisPipeline} class
}
\seealso{
Other Package core functions: \code{\link{BaseAnalysisPipeline}},
  \code{\link{MetaAnalysisPipeline}},
  \code{\link{assessEngineSetUp}},
  \code{\link{checkSchemaMatch}},
  \code{\link{createPipelineInstance}},
  \code{\link{exportAsMetaPipeline}},
  \code{\link{generateOutput}},
  \code{\link{genericPipelineException}},
  \code{\link{getInput}}, \code{\link{getLoggerDetails}},
  \code{\link{getOutputById}},
  \code{\link{getPipelinePrototype}},
  \code{\link{getPipeline}}, \code{\link{getRegistry}},
  \code{\link{initDfBasedOnType}},
  \code{\link{initializeBaseAnalysisPipeline}},
  \code{\link{loadMetaPipeline}},
  \code{\link{loadPipeline}},
  \code{\link{loadPredefinedFunctionRegistry}},
  \code{\link{loadRegistry}}, \code{\link{prepExecution}},
  \code{\link{registerFunction}},
  \code{\link{savePipeline}}, \code{\link{saveRegistry}},
  \code{\link{setInput}}, \code{\link{setLoggerDetails}},
  \code{\link{updateObject}},
  \code{\link{visualizePipeline}}
}
\concept{Package core functions}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core-functions.R
\name{registerFunction}
\alias{registerFunction}
\title{Register a user-defined function to be used with a \code{AnalysisPipeline} or \code{StreamingAnalysisPipeline} object}
\usage{
registerFunction(object, functionName, heading = "", engine = "r",
  exceptionFunction = substitute(genericPipelineException),
  loadPipeline = F, userDefined = T)
}
\arguments{
\item{object}{object that contains input, pipeline, registry and output}

\item{functionName}{name of function to be registered}

\item{heading}{heading of that section in report}

\item{engine}{specifies which engine the function is to be run on. Available engines include "r", "spark", and "python"}

\item{loadPipeline}{logical parameter to see if function is being used in loadPipeline or not}
}
\value{
Updated \code{AnalysisPipeline} or \code{StreamingAnalysisPipeline} object
}
\details{
The specified operation along with the heading and parameters is updated in the pipeline slot
      of the \code{AnalysisPipeline} or \code{StreamingAnalysisPipeline} object, where the sequence of operations to be performed is stored

This method is implemented on the base class as it is a shared functionality types of Analysis Pipelines
which extend this class
}
\seealso{
Other Package core functions: \code{\link{BaseAnalysisPipeline}},
  \code{\link{assessEngineSetUp}},
  \code{\link{checkSchemaMatch}},
  \code{\link{generateOutput}},
  \code{\link{genericPipelineException}},
  \code{\link{getInput}}, \code{\link{getLoggerDetails}},
  \code{\link{getOutputById}}, \code{\link{getPipeline}},
  \code{\link{getRegistry}},
  \code{\link{initDfBasedOnType}},
  \code{\link{initializeBaseAnalysisPipeline}},
  \code{\link{loadPipeline}}, \code{\link{prepExecution}},
  \code{\link{savePipeline}}, \code{\link{setInput}},
  \code{\link{setLoggerDetails}},
  \code{\link{updateObject}},
  \code{\link{visualizePipeline}}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core-functions.R, R/core-functions-batch.R,
%   R/core-functions-meta-pipelines.R, R/core-streaming-functions.R
\docType{methods}
\name{initialize,BaseAnalysisPipeline-method}
\alias{initialize,BaseAnalysisPipeline-method}
\alias{initialize,AnalysisPipeline-method}
\alias{initialize,MetaAnalysisPipeline-method}
\alias{initialize,StreamingAnalysisPipeline-method}
\title{This is the constructor for the \link{BaseAnalysisPipeline} class}
\usage{
\S4method{initialize}{BaseAnalysisPipeline}(.Object)

\S4method{initialize}{AnalysisPipeline}(.Object, ...,
  input = data.frame(), filePath = "")

\S4method{initialize}{MetaAnalysisPipeline}(.Object, type = "batch")

\S4method{initialize}{StreamingAnalysisPipeline}(.Object, input)
}
\description{
BaseAnalysisPipeline constructor

AnalysisPipeline constructor

MetaAnalysisPipeline constructor

StreamingAnalysisPipeline constructor
}
\seealso{
Other Package core functions: \code{\link{BaseAnalysisPipeline-class}},
  \code{\link{MetaAnalysisPipeline-class}},
  \code{\link{assessEngineSetUp}},
  \code{\link{checkSchemaMatch}},
  \code{\link{createPipelineInstance}},
  \code{\link{exportAsMetaPipeline}},
  \code{\link{generateOutput}},
  \code{\link{genericPipelineException}},
  \code{\link{getInput}}, \code{\link{getLoggerDetails}},
  \code{\link{getOutputById}},
  \code{\link{getPipelinePrototype}},
  \code{\link{getPipeline}}, \code{\link{getRegistry}},
  \code{\link{initDfBasedOnType}},
  \code{\link{loadMetaPipeline}},
  \code{\link{loadPipeline}},
  \code{\link{loadPredefinedFunctionRegistry}},
  \code{\link{loadRegistry}}, \code{\link{prepExecution}},
  \code{\link{registerFunction}},
  \code{\link{savePipeline}}, \code{\link{saveRegistry}},
  \code{\link{setInput}}, \code{\link{setLoggerDetails}},
  \code{\link{updateObject}},
  \code{\link{visualizePipeline}}

Other Package core functions for batch/one-time analyses: \code{\link{AnalysisPipeline-class}},
  \code{\link{checkSchema}}, \code{\link{generateReport}}

Other Package core functions: \code{\link{BaseAnalysisPipeline-class}},
  \code{\link{MetaAnalysisPipeline-class}},
  \code{\link{assessEngineSetUp}},
  \code{\link{checkSchemaMatch}},
  \code{\link{createPipelineInstance}},
  \code{\link{exportAsMetaPipeline}},
  \code{\link{generateOutput}},
  \code{\link{genericPipelineException}},
  \code{\link{getInput}}, \code{\link{getLoggerDetails}},
  \code{\link{getOutputById}},
  \code{\link{getPipelinePrototype}},
  \code{\link{getPipeline}}, \code{\link{getRegistry}},
  \code{\link{initDfBasedOnType}},
  \code{\link{loadMetaPipeline}},
  \code{\link{loadPipeline}},
  \code{\link{loadPredefinedFunctionRegistry}},
  \code{\link{loadRegistry}}, \code{\link{prepExecution}},
  \code{\link{registerFunction}},
  \code{\link{savePipeline}}, \code{\link{saveRegistry}},
  \code{\link{setInput}}, \code{\link{setLoggerDetails}},
  \code{\link{updateObject}},
  \code{\link{visualizePipeline}}
}
\concept{Package core functions}
\concept{Package core functions for batch/one-time analyses}
\keyword{internal}
